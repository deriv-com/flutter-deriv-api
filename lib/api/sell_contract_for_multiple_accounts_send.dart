/// Autogenerated from flutter_deriv_api|lib/api/sell_contract_for_multiple_accounts_send.json
import 'dart:async';
import 'dart:convert';
import 'package:json_annotation/json_annotation.dart';

part 'sell_contract_for_multiple_accounts_send.g.dart';

@JsonSerializable(nullable: false, fieldRename: FieldRename.snake)
class SellContractForMultipleAccountsRequest {
  SellContractForMultipleAccountsRequest();
  factory SellContractForMultipleAccountsRequest.fromJson(
          Map<String, dynamic> json) =>
      _$SellContractForMultipleAccountsRequestFromJson(json);
  Map<String, dynamic> toJson() =>
      _$SellContractForMultipleAccountsRequestToJson(this);

  // Properties
  int sellContractForMultipleAccounts;

  /// Must be 1
  num price;

  /// Minimum price at which to sell the contract, or '0' for 'sell at market'
  String shortcode;

  /// An internal ID used to identify the contract which was originally bought. This is returned from the buy and buy_for_multiple_accounts calls
  List<String> tokens;

  /// Authorisation tokens which select the accounts to sell use for the affected accounts
  Map<String, dynamic> passthrough;

  /// [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.
  int reqId;

  /// [Optional] Used to map request to response.

  // @override
  // String toString() => name;
  static bool _fromInteger(int v) => (v != 0);
  static int _fromBoolean(bool v) => v ? 1 : 0;
}
