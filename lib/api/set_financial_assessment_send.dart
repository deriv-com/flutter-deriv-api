/// Autogenerated from flutter_deriv_api|lib/api/set_financial_assessment_send.json
import 'dart:async';
import 'dart:convert';
import 'package:json_annotation/json_annotation.dart';

part 'set_financial_assessment_send.g.dart';

@JsonSerializable(nullable: false, fieldRename: FieldRename.snake)
class SetFinancialAssessmentRequest {
  SetFinancialAssessmentRequest();
  factory SetFinancialAssessmentRequest.fromJson(Map<String, dynamic> json) =>
      _$SetFinancialAssessmentRequestFromJson(json);
  Map<String, dynamic> toJson() => _$SetFinancialAssessmentRequestToJson(this);

  // Properties
  /// The anticipated account turnover
  String accountTurnover;

  /// Binary options trading experience
  String binaryOptionsTradingExperience;

  /// Binary options trading frequency
  String binaryOptionsTradingFrequency;

  /// CFDs trading experience
  String cfdTradingExperience;

  /// CFDs trading frequency
  String cfdTradingFrequency;

  /// Level of Education
  String educationLevel;

  /// Industry of Employment
  String employmentIndustry;

  /// Employment Status
  String employmentStatus;

  /// Estimated Net Worth
  String estimatedWorth;

  /// Forex trading experience
  String forexTradingExperience;

  /// Forex trading frequency
  String forexTradingFrequency;

  /// Income Source
  String incomeSource;

  /// Net Annual Income
  String netIncome;

  /// Occupation
  String occupation;

  /// Trading experience in other financial instruments
  String otherInstrumentsTradingExperience;

  /// Trading frequency in other financial instruments
  String otherInstrumentsTradingFrequency;

  /// [Optional] Used to pass data through the websocket, which may be retrieved via the echo_req output field.
  Map<String, dynamic> passthrough;

  /// [Optional] Used to map request to response.
  int reqId;

  /// Must be 1
  int setFinancialAssessment;

  /// Source of wealth
  String sourceOfWealth;

  // @override
  // String toString() => name;
  static bool _fromInteger(int v) => (v != 0);
  static int _fromBoolean(bool v) => v ? 1 : 0;
}
