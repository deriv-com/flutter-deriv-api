{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>();\n\n  /// Retrieves a list of all available underlyings and the corresponding contract types and trading duration boundaries.\n  ///\n  /// If the user is logged in, only the assets available for that user's landing company will be returned.\n  /// For parameters information refer to [TradingDurationsRequest].\n  /// Throws a [TradingException] if API response contains an error\n  static Future<TradingDurationsResponse> fetchTradingDurations(\n    TradingDurationsSend request,\n  ) async {\n    final TradingDurationsReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel baseExceptionModel}) =>\n          TradingException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return TradingDurationsResponse.fromJson(response.tradingDurations);\n  }\n",
    "imports" : "import 'package:meta/meta.dart';\n\nimport '../../basic_api/generated/trading_durations_receive.dart';\nimport '../../basic_api/generated/trading_durations_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}