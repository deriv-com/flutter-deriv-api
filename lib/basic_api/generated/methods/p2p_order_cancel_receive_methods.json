{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Cancel a P2P order.\n  Future<P2pOrderCancelResponse> cancelOrder(\n    P2pOrderCancelRequest request,\n  ) async {\n    final P2pOrderCancelReceive response = await cancelOrderRaw(request);\n\n    return P2pOrderCancelResponse.fromJson(response.p2pOrderCancel);\n  }\n\n  /// Cancel a P2P order.\n  Future<P2pOrderCancelReceive> cancelOrderRaw(\n    P2pOrderCancelRequest request,\n  ) async {\n    final P2pOrderCancelReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertiserException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response;\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_order_cancel_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_order_cancel_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
