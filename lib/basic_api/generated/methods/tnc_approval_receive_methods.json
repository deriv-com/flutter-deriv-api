{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Approve the latest version of terms and conditions.\n  ///\n  /// For parameters information refer to [TncApprovalRequest].\n  /// Throws a [UserException] if API response contains an error\n  static Future<TncApprovalResponse> verify(\n    TncApprovalSend request,\n  ) async {\n    final TncApprovalReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          UserException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return TncApprovalResponse.fromJson(response.tncApproval);\n  }",
    "imports" : "import '../../basic_api/generated/tnc_approval_receive.dart';\nimport '../../basic_api/generated/tnc_approval_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}