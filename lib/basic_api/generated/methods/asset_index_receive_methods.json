{
    "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>();\n\n  /// Retrieves a list of all available underlyings and the corresponding contract types and duration boundaries.\n  ///\n  /// If the user is logged in, only the assets available for that user's landing company will be returned.\n  /// Throws an [AssetIndexException] if API response contains an error\n  static Future<AssetIndexResponse> fetchAssetIndices([\n    AssetIndexSend request,\n  ]) async {\n    final AssetIndexReceive response = await _api.call(\n      request: request ?? const AssetIndexSend(),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel baseExceptionModel}) =>\n          AssetIndexException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AssetIndexResponse.fromJson(response.assetIndex);\n  }\n",
    "imports": "import 'package:meta/meta.dart';\n\nimport '../../api/exceptions/exceptions.dart';\nimport '../../api/models/base_exception_model.dart';\nimport '../../basic_api/generated/asset_index_receive.dart';\nimport '../../basic_api/generated/asset_index_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';"
}