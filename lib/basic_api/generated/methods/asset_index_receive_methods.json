{
  "methods": " static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Retrieves a list of all available underlyings and the corresponding contract types and duration boundaries.\n  ///\n  /// If the user is logged in, only the assets available for that user's landing company will be returned.\n  /// Throws an [BaseAPIException] if API response contains an error\n  static Future<AssetIndexResponse> fetchAssetIndices(\n    AssetIndexRequest request,\n  ) async {\n    final AssetIndexReceive response = await _api.call(\n      request: request,\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AssetIndexResponse.fromJson(response.assetIndex);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/asset_index_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/asset_index_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
