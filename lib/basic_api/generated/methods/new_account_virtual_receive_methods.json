{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Opens a new virtual account.\n  ///\n  /// For parameters information refer to [NewAccountVirtualRequest].\n  /// Throws a [NewAccountException] if API response contains an error\n  static Future<NewAccountVirtualResponse> openNewVirtualAccount(\n    NewAccountVirtualRequest request,\n  ) async {\n    final NewAccountVirtualReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          NewAccountException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return NewAccountVirtualResponse.fromJson(response.newAccountVirtual);\n  }",
    "imports" : "import '../../api/exceptions/exceptions.dart';\nimport '../../api/models/base_exception_model.dart';\nimport '../../basic_api/generated/new_account_virtual_receive.dart';\nimport '../../basic_api/generated/new_account_virtual_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';"
}