{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Topes up the virtual-money's account balance becomes when it becomes low.\n  ///\n  /// For parameters information refer to [TopupVirtualRequest].\n  /// Throws a [TopUpVirtualException] if API response contains an error\n  static Future<TopupVirtualResponse> topUp([\n    TopupVirtualRequest? request,\n  ]) async {\n    final TopupVirtualReceive response = await _api.call(\n      request: request ?? const TopupVirtualRequest(),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          TopUpVirtualException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return TopupVirtualResponse.fromJson(response.topupVirtual);\n  }",
    "imports" : "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/topup_virtual_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/topup_virtual_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}