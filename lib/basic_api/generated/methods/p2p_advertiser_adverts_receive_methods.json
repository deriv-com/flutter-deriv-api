{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Returns all P2P (peer to peer) adverts created by the authorized client.\n  /// Can only be used by a registered P2P advertiser.\n  /// For parameters information refer to [P2pAdvertiserAdvertsRequest].\n  static Future<P2pAdvertiserAdvertsResponse> fetchAdvertiserAdverts(\n    P2pAdvertiserAdvertsRequest request,\n  ) async {\n    final P2pAdvertiserAdvertsReceive response =\n        await fetchAdvertiserAdvertsRaw(request);\n\n    return P2pAdvertiserAdvertsResponse.fromJson(response.p2pAdvertiserAdverts);\n  }\n\n  /// Returns all P2P (peer to peer) adverts created by the authorized client.\n  /// Can only be used by a registered P2P advertiser.\n  /// For parameters information refer to [P2pAdvertiserAdvertsRequest].\n  static Future<P2pAdvertiserAdvertsReceive> fetchAdvertiserAdvertsRaw(\n    P2pAdvertiserAdvertsRequest request,\n  ) async {\n    final P2pAdvertiserAdvertsReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertiserException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response;\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advertiser_adverts_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advertiser_adverts_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
