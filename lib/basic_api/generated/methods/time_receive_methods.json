{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!; \n \n  /// Gets back-end server epoch time. \n  /// \n  /// For parameters information refer to [TimeRequest]. \n  /// Throws a [ServerTimeException] if API response contains an error. \n  static Future<TimeReceive> fetchTimeRaw([TimeRequest? request]) async { \n    final TimeReceive response = await _api.call( \n      request: request ?? const TimeRequest(), \n    ); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          ServerTimeException(), \n    ); \n \n    return response; \n  } \n \n  /// Gets back-end server epoch time. \n  /// \n  /// For parameters information refer to [TimeRequest]. \n  /// Throws a [ServerTimeException] if API response contains an error. \n  static Future<TimeResponse> fetchTime([TimeRequest? request]) async { \n    final TimeReceive response = await fetchTimeRaw(request); \n \n    return TimeResponse.fromJson(response.time); \n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/time_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/time_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
