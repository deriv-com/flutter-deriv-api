{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Sets the financial assessment details based on the client's answers to\n  /// analyze whether they possess the experience and knowledge to\n  /// understand the risks involved with binary options trading.\n  ///\n  /// For parameters information refer to [SetFinancialAssessmentRequest].\n  /// Throws a [FinancialAssessmentException] if API response contains an error\n  static Future<SetFinancialAssessmentResponse> setAssessment(\n    SetFinancialAssessmentRequest request,\n  ) async {\n    final SetFinancialAssessmentReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          FinancialAssessmentException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return SetFinancialAssessmentResponse.fromJson(\n        response.setFinancialAssessment);\n  }",
    "imports" : "import '../../basic_api/generated/set_financial_assessment_receive.dart';\nimport '../../basic_api/generated/set_financial_assessment_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}