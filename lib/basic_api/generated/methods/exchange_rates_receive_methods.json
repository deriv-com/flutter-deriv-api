{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Retrieves the exchange rates from a base currency to all currencies supported by the system.\n  ///\n  /// For parameters information refer to [ExchangeRatesRequest].\n  /// Throws an [ExchangeException] if API response contains an error\n  static Future<ExchangeRates?> fetchExchangeRates(\n    ExchangeRatesSend request,\n  ) async {\n    final ExchangeRatesReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          ExchangeException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response.exchangeRates == null\n        ? null\n        : ExchangeRates.fromJson(response.exchangeRates!);\n  }",
    "imports" : "import '../../basic_api/generated/exchange_rates_receive.dart';\nimport '../../basic_api/generated/exchange_rates_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}