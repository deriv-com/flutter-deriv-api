{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!; \n \n  /// Retrieves the exchange rates from a base currency to all currencies supported by the system. \n  /// \n  /// For parameters information refer to [ExchangeRatesRequest]. \n  /// Throws an [ExchangeException] if API response contains an error. \n  static Future<ExchangeRatesReceive?> fetchExchangeRatesRaw( \n    ExchangeRatesRequest request, \n  ) async { \n    final ExchangeRatesReceive response = await _api.call(request: request); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          ExchangeException(baseExceptionModel: baseExceptionModel), \n    ); \n \n    return response; \n  } \n \n  /// Retrieves the exchange rates from a base currency to all currencies supported by the system. \n  /// \n  /// For parameters information refer to [ExchangeRatesRequest]. \n  /// Throws an [ExchangeException] if API response contains an error. \n  static Future<ExchangeRates?> fetchExchangeRates( \n    ExchangeRatesRequest request, \n  ) async { \n    final ExchangeRatesReceive? response = await fetchExchangeRatesRaw(request); \n \n    return response?.exchangeRates == null \n        ? null \n        : ExchangeRates.fromJson(response!.exchangeRates!); \n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/exchange_rates_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/exchange_rates_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
