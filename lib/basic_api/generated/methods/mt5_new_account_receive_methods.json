{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Creates new MT5 user, either demo or real money user.\n  ///\n  /// For parameters information refer to [Mt5NewAccountRequest].\n  /// Throws a [MT5Exception] if API response contains an error\n  static Future<Mt5NewAccountResponse> createNewAccount(\n    Mt5NewAccountRequest request,\n  ) async {\n    final Mt5NewAccountReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          MT5Exception(baseExceptionModel: baseExceptionModel),\n    );\n\n    return Mt5NewAccountResponse.fromJson(response.mt5NewAccount);\n  }\n\n  /// Allows deposit into MT5 account from binary account.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5DepositResponse> deposit({\n    required double amount,\n    required String fromBinary,\n  }) =>\n      Mt5DepositResponse.deposit(\n        Mt5DepositRequest(\n          amount: amount,\n          fromBinary: fromBinary,\n          toMt5: mt5NewAccount?.login,\n        ),\n      );\n\n  /// Changes password of the MT5 account.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5PasswordChangeResponse> changePassword({\n    required String newPassword,\n    required String oldPassword,\n    required PasswordType passwordType,\n  }) =>\n      Mt5PasswordChangeResponse.changePassword(\n        Mt5PasswordChangeRequest(\n          login: mt5NewAccount?.login,\n          newPassword: newPassword,\n          oldPassword: oldPassword,\n          passwordType: getStringFromEnum(passwordType),\n        ),\n      );\n\n  /// Validates the main password for the MT5 user.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5PasswordCheckResponse> checkPassword({\n    required String password,\n    required PasswordType passwordType,\n  }) =>\n      Mt5PasswordCheckResponse.checkPassword(\n        Mt5PasswordCheckRequest(\n          login: mt5NewAccount?.login,\n          password: password,\n          passwordType: getStringFromEnum(passwordType),\n        ),\n      );\n\n  /// Resets the password of MT5 account.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5PasswordResetResponse> resetPassword({\n    required String newPassword,\n    required PasswordType passwordType,\n    required String verificationCode,\n  }) =>\n      Mt5PasswordResetResponse.resetPassword(\n        Mt5PasswordResetRequest(\n          login: mt5NewAccount?.login,\n          newPassword: newPassword,\n          passwordType: getStringFromEnum(passwordType),\n          verificationCode: verificationCode,\n        ),\n      );\n\n  /// Gets the MT5 user account settings.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5GetSettingsResponse> fetchSettings() =>\n      Mt5GetSettingsResponse.fetchSettings(\n          Mt5GetSettingsRequest(login: mt5NewAccount?.login));\n\n  /// Allows withdrawal from MT5 account to Binary account.\n  ///\n  /// Throws a [MT5Exception] if API response contains an error\n  Future<Mt5WithdrawalResponse> withdraw({\n    required double amount,\n    required String toBinary,\n  }) =>\n      Mt5WithdrawalResponse.withdraw(\n        Mt5WithdrawalRequest(\n          amount: amount,\n          fromMt5: mt5NewAccount?.login,\n          toBinary: toBinary,\n        ),\n      );",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/api/models/enums.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_deposit_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_get_settings_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_password_change_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_password_check_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_password_reset_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/mt5_withdrawal_response_result.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_deposit_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_get_settings_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_new_account_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_new_account_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_password_change_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_password_check_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_password_reset_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_withdrawal_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
