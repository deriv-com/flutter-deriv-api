{
  "methods": "static final BaseAPI? _api = Injector.getInjector().get<BaseAPI>();\n\n  /// Reset the password of User.\n  static Future<ResetPasswordResponse> reset(\n    ResetPasswordRequest request,\n  ) async {\n    final ResetPasswordReceive? response =\n        await _api!.call<ResetPasswordReceive>(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          UserException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ResetPasswordResponse.fromJson(response?.resetPassword);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/reset_password_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/reset_password_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
