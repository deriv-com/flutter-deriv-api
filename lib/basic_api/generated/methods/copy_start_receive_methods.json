{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Starts copy trader bets.\n  ///\n  /// For parameters information refer to [CopyStartRequest].\n  /// Throws a [CopyTradingException] if API response contains an error\n  static Future<CopyStartResponse> start(CopyStartRequest request) async {\n    final CopyStartReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          CopyTradingException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return CopyStartResponse.fromJson(response.copyStart);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/copy_start_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/copy_start_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
