{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!; \n \n  /// Manage or list P2P advertiser payment methods. \n  /// \n  /// For parameters information refer to [P2pPaymentMethodsRequest]. \n  /// Throws an [P2PAdvertiserException] if API response contains an error. \n  static Future<P2pPaymentMethodsReceive> fetchMethodsRaw( \n    P2pPaymentMethodsRequest request, \n  ) async { \n    final P2pPaymentMethodsReceive response = await _api.call(request: request); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          P2PAdvertiserException(baseExceptionModel: baseExceptionModel), \n    ); \n \n    return response; \n  } \n \n  /// Manage or list P2P advertiser payment methods. \n  /// \n  /// For parameters information refer to [P2pPaymentMethodsRequest]. \n  /// Throws an [P2PAdvertiserException] if API response contains an error. \n  static Future<P2pPaymentMethodsResponse> fetchMethods( \n    P2pPaymentMethodsRequest request, \n  ) async { \n    final P2pPaymentMethodsReceive response = await fetchMethodsRaw(request); \n \n    return P2pPaymentMethodsResponse.fromJson(response.p2pPaymentMethods); \n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/response/p2p_payment_methods_response_result.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_payment_methods_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_payment_methods_send.dart';\n\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
