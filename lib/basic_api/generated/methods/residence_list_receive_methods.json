{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets Residence list for the given [ResidenceListRequest]\n  ///\n  /// Throws a [ResidenceException] if API response contains an error\n  static Future<ResidenceListResponse> fetchResidenceList([\n    ResidenceListRequest? request,\n  ]) async {\n    final ResidenceListReceive response = await _api.call(\n      request: request ?? const ResidenceListRequest(),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          ResidenceException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ResidenceListResponse.fromJson(response.residenceList);\n  }",
    "imports" : "import '../../basic_api/generated/residence_list_receive.dart';\nimport '../../basic_api/generated/residence_list_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}