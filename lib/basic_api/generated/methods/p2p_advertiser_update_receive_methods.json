{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Updates the information of the P2P (peer to peer) advertiser for the current account.\n  /// Can only be used by an approved P2P advertiser.\n  /// For parameters information refer to [P2pAdvertiserUpdateRequest].\n  static Future<P2pAdvertiserUpdateResponse> updateAdvertiser(\n    P2pAdvertiserUpdateRequest request,\n  ) async {\n    final P2pAdvertiserUpdateReceive response =\n        await updateAdvertiserRaw(request);\n\n    return P2pAdvertiserUpdateResponse.fromJson(response.p2pAdvertiserUpdate);\n  }\n\n  /// Updates the information of the P2P (peer to peer) advertiser for the current account.\n  /// Can only be used by an approved P2P advertiser.\n  /// For parameters information refer to [P2pAdvertiserUpdateRequest].\n  static Future<P2pAdvertiserUpdateReceive> updateAdvertiserRaw(\n    P2pAdvertiserUpdateRequest request,\n  ) async {\n    final P2pAdvertiserUpdateReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertiserException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response;\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advertiser_update_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advertiser_update_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
