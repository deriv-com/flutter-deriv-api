{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Trading Platform: Accounts List.\n  ///\n  /// Get list of Trading Platform accounts for client.\n  /// For parameters information refer to [TradingPlatformAccountsRequest].\n  /// Throws a [BaseAPIException] if API response contains an error.\n  static Future<TradingPlatformAccountsResponse> getAccounts(\n    TradingPlatformAccountsRequest request,\n  ) async {\n    final TradingPlatformAccountsReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return TradingPlatformAccountsResponse.fromJson(\n      response.tradingPlatformAccounts,\n    );\n  }\n",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/api.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
