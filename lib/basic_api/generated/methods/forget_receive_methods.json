{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Immediately cancels the real-time stream of messages with a specific id.\n  ///\n  /// For parameters information refer to [ForgetRequest].\n  /// Throws a [ForgetException] if API response contains an error\n  static Future<ForgetResponse> forgetMethod(\n    ForgetRequest request,\n  ) async {\n    final ForgetReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          ForgetException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ForgetResponse.fromJson(response.forget);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/forget_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/forget_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
