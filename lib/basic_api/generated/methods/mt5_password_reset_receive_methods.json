{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Resets the password of MT5 account.\n  ///\n  /// For parameters information refer to [Mt5PasswordResetRequest].\n  /// Throws a [MT5Exception] if API response contains an error\n  static Future<Mt5PasswordResetResponse> resetPassword(\n    Mt5PasswordResetSend request,\n  ) async {\n    final Mt5PasswordResetReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          MT5Exception(baseExceptionModel: baseExceptionModel),\n    );\n\n    return Mt5PasswordResetResponse.fromJson(response.mt5PasswordReset);\n  }",
    "imports" : "import '../../basic_api/generated/mt5_password_reset_receive.dart';\nimport '../../basic_api/generated/mt5_password_reset_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}