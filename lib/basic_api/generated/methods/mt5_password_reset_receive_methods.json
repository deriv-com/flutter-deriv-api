{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Resets the password of MT5 account.\n  ///\n  /// For parameters information refer to [Mt5PasswordResetRequest].\n  /// Throws a [MT5Exception] if API response contains an error\n  static Future<Mt5PasswordResetResponse> resetPassword(\n    Mt5PasswordResetRequest request,\n  ) async {\n    final Mt5PasswordResetReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          MT5Exception(baseExceptionModel: baseExceptionModel),\n    );\n\n    return Mt5PasswordResetResponse.fromJson(response.mt5PasswordReset);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_password_reset_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/mt5_password_reset_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
