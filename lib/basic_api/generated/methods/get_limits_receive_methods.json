{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>();\n\n  /// Gets the trading and withdrawal limits for logged in account\n  ///\n  /// Throws an [AccountLimitsException] if API response contains an error\n  static Future<GetLimitsResponse> fetchAccountLimits([\n    GetLimitsSend request,\n  ]) async {\n    final GetLimitsReceive response = await _api.call(\n      request: request ?? const GetLimitsSend(),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel baseExceptionModel}) =>\n          AccountLimitsException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return GetLimitsResponse.fromJson(response.getLimits);\n  }",
    "imports" : "import 'package:meta/meta.dart';\n\nimport '../../basic_api/generated/get_limits_receive.dart';\nimport '../../basic_api/generated/get_limits_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}