{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets the copy trading statistics for given `traderId` in [request]\n  ///\n  /// Throws a [CopyTradingException] if API response contains an error\n  static Future<CopytradingStatisticsResponse> fetchStatistics(\n    CopytradingStatisticsRequest request,\n  ) async {\n    final CopytradingStatisticsReceive response = await _api.call(\n      request: request,\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          CopyTradingException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return CopytradingStatisticsResponse.fromJson(\n        response.copytradingStatistics);\n  }",
    "imports" : "import '../../basic_api/generated/copytrading_statistics_receive.dart';\nimport '../../basic_api/generated/copytrading_statistics_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}