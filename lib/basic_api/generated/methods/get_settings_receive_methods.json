{
  "methods": "static final BaseAPI _api = Injector().get<BaseAPI>()!; \n \n  /// Gets user's settings (email, date of birth, address etc). \n  /// \n  /// For parameters information refer to [GetSettingsRequest]. \n  /// Throws an [AccountSettingsException] if API response contains an error. \n  static Future<GetSettingsReceive> fetchAccountSettingRaw([ \n    GetSettingsRequest? request, \n  ]) async { \n    final GetSettingsReceive response = await _api.call( \n      request: request ?? const GetSettingsRequest(), \n    ); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          AccountSettingsException(baseExceptionModel: baseExceptionModel), \n    ); \n \n    return response; \n  } \n \n  /// Gets user's settings (email, date of birth, address etc). \n  /// \n  /// For parameters information refer to [GetSettingsRequest]. \n  /// Throws an [AccountSettingsException] if API response contains an error. \n  static Future<SetSettingsReceive> changeAccountSettingRaw( \n    SetSettingsRequest request, \n  ) async { \n    final SetSettingsReceive response = await _api.call(request: request); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          AccountSettingsException(baseExceptionModel: baseExceptionModel), \n    ); \n \n    return response; \n  } \n \n  /// Gets user's settings (email, date of birth, address etc). \n  /// \n  /// Throws an [AccountSettingsException] if API response contains an error. \n  static Future<GetSettingsResponse> fetchAccountSetting([ \n    GetSettingsRequest? request, \n  ]) async { \n    final GetSettingsReceive response = await fetchAccountSettingRaw(request); \n \n    return GetSettingsResponse.fromJson(response.getSettings); \n  } \n \n  /// Changes the user's settings with parameters specified as [SetSettingsRequest]. \n  /// \n  /// Throws an [AccountSettingsException] if API response contains an error. \n  static Future<SetSettingsResponse> changeAccountSetting( \n    SetSettingsRequest request, \n  ) async { \n    final SetSettingsReceive response = await changeAccountSettingRaw(request); \n \n    return SetSettingsResponse(setSettings: response.setSettings ?? 0); \n  } \n \n  /// Changes user's setting \n  Future<SetSettingsResponse> changeSetting({ \n    required String secretAnswer, \n    required String secretQuestion, \n  }) => \n      changeAccountSetting( \n        SetSettingsRequest( \n          accountOpeningReason: getSettings?.accountOpeningReason, \n          addressCity: getSettings?.addressCity, \n          addressLine1: getSettings?.addressLine1, \n          addressLine2: getSettings?.addressLine2, \n          addressPostcode: getSettings?.addressPostcode, \n          addressState: getSettings?.addressState, \n          allowCopiers: getSettings?.allowCopiers, \n          citizen: getSettings?.citizen, \n          dateOfBirth: getStringFromDateTime(getSettings?.dateOfBirth), \n          emailConsent: getSettings?.emailConsent, \n          firstName: getSettings?.firstName, \n          lastName: getSettings?.lastName, \n          phone: getSettings?.phone, \n          placeOfBirth: getSettings?.placeOfBirth, \n          requestProfessionalStatus: \n              getInt(value: getSettings?.requestProfessionalStatus), \n          residence: getSettings?.residence, \n          salutation: getSettings?.salutation, \n          secretAnswer: secretAnswer, \n          secretQuestion: secretQuestion, \n          taxIdentificationNumber: getSettings?.taxIdentificationNumber, \n          taxResidence: getSettings?.taxResidence, \n        ), \n      );",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/api/response/set_settings_response_result.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/get_settings_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/get_settings_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/set_settings_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/set_settings_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
