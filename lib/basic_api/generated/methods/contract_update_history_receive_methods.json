{
    "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets update history for contract as List of [HistorySpotPriceModel]\n  ///\n  /// Throws a [ContractOperationException] if API response contains an error\n  static Future<ContractUpdateHistoryResponse> fetchContractUpdateHistory(\n    ContractUpdateHistoryRequest request,\n  ) async {\n    final ContractUpdateHistoryReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          ContractOperationException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ContractUpdateHistoryResponse.fromJson(\n        response.contractUpdateHistory);\n  }",
    "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/contract_update_history_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/contract_update_history_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}