{
  "methods": "static final BaseAPI _api = Injector().get<BaseAPI>()!;\n\n  /// Updates a P2P (peer to peer) advert. Can only be used by the advertiser.\n  ///\n  /// For parameters information refer to [P2pAdvertUpdateRequest].\n  /// Throws a [P2PAdvertException] if API response contains an error\n  static Future<P2pAdvertUpdateResponse> updateAdvert(\n    P2pAdvertUpdateRequest request,\n  ) async {\n    final P2pAdvertUpdateReceive response = await updateAdvertRaw(request);\n\n    return P2pAdvertUpdateResponse.fromJson(response.p2pAdvertUpdate);\n  }\n\n  /// Updates a P2P (peer to peer) advert. Can only be used by the advertiser.\n  ///\n  /// For parameters information refer to [P2pAdvertUpdateRequest].\n  /// Throws a [P2PAdvertException] if API response contains an error\n  static Future<P2pAdvertUpdateReceive> updateAdvertRaw(\n    P2pAdvertUpdateRequest request,\n  ) async {\n    final P2pAdvertUpdateReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response;\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advert_update_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_advert_update_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
