{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Gets the list of states for the given [StatesListRequest]\n  ///\n  /// Throws a [BaseAPIException] if API response contains an error\n  static Future<StatesListResponse> fetchStatesList(\n      StatesListRequest request) async {\n    final StatesListReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return StatesListResponse.fromJson(response.statesList);\n  }\n",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/states_list_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/states_list_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
