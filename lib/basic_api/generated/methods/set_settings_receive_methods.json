{
  "methods": "  static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Changes the user's settings with parameters specified as [SetSettingsRequest]\n  ///\n  /// Throws an [AccountSettingsException] if API response contains an error\n  static Future<SetSettingsResponse> changeAccountSetting(\n    SetSettingsRequest request,\n  ) async {\n    final SetSettingsReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          AccountSettingsException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return SetSettingsResponse(setSettings: response.setSettings ?? 0);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/set_settings_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/set_settings_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
