{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Retrieves a summary of login history for user.\n  ///\n  /// For parameters information refer to [LoginHistory].\n  /// Throws an [BaseAPIException] if API response contains an error\n  static Future<LoginHistoryResponse> fetchHistory([\n    LoginHistoryRequest? request,\n  ]) async {\n    final LoginHistoryReceive response = await _api.call(\n      request: request ?? const LoginHistoryRequest(limit: 10),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return LoginHistoryResponse.fromJson(response.loginHistory);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/login_history_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/login_history_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
