{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>();\n\n  /// This call allows transfers between accounts held by a given user.\n  ///\n  /// Transfer funds between your fiat and crypto currency accounts (for a fee).\n  /// Please note that account_from should be same as current authorized account.\n  /// For parameters information refer to [TransferBetweenAccountsRequest].\n  /// Throws a [TransferException] if API response contains an error\n  static Future<TransferBetweenAccountsResponse> transfer(\n    TransferBetweenAccountsSend request,\n  ) async {\n    final TransferBetweenAccountsReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel baseExceptionModel}) =>\n          TransferException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return TransferBetweenAccountsResponse.fromJson(\n        response.transferBetweenAccounts,\n        response.accounts,\n        response.clientToFullName,\n        response.clientToLoginid,\n        response.transactionId);\n  }\n",
    "imports" : "import 'package:meta/meta.dart';\n\nimport '../../basic_api/generated/transfer_between_accounts_receive.dart';\nimport '../../basic_api/generated/transfer_between_accounts_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}