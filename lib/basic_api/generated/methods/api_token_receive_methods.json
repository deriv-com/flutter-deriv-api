{
  "methods": " static final BaseAPI _api = Injector().get<BaseAPI>()!;\n\n  /// Creates an API tokens\n  ///\n  /// [name] is the name of the token.\n  /// [scopes] is a list of permission scopes to provide with the token.\n  /// [validForCurrentIPOnly] is optional and if you set this parameter during token creation,\n  /// then the token created will only work for the IP address that was used to create the token\n  /// Throws an [APITokenException] if API response contains an error.\n  static Future<ApiTokenResponse> create({\n    required String name,\n    required List<ScopesItemEnum> scopes,\n    bool? validForCurrentIPOnly,\n  }) async {\n    final ApiTokenReceive response = await _api.call(\n      request: ApiTokenRequest(\n        newToken: name,\n        newTokenScopes: getStringListFromEnums(\n            scopes), \n        validForCurrentIpOnly: validForCurrentIPOnly,\n      ),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          APITokenException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ApiTokenResponse.fromJson(response.apiToken);\n  }\n\n  /// Deletes the [token]\n  ///\n  /// Throws an [APITokenException] if API response contains an error\n  static Future<ApiTokenResponse> delete({\n    required String token,\n  }) async {\n    final ApiTokenReceive response = await _api.call(\n      request: ApiTokenRequest(deleteToken: token),\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          APITokenException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ApiTokenResponse.fromJson(response.apiToken);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/api_token_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/api_token_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
