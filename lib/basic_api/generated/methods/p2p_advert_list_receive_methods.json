{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Returns available adverts.\n  ///\n  /// For parameters information refer to [P2pAdvertListRequest].\n  /// Throws a [P2PAdvertException] if API response contains an error\n  static Future<P2pAdvertListResponse> fetchAdvertList(\n    P2pAdvertListRequest request,\n  ) async {\n    final P2pAdvertListReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return P2pAdvertListResponse.fromJson(response.p2pAdvertList);\n  }",
    "imports" : "import '../../basic_api/generated/p2p_advert_list_receive.dart';\nimport '../../basic_api/generated/p2p_advert_list_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/p2p_advert_exception.dart';\nimport '../models/base_exception_model.dart';"
}