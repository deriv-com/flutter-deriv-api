{
  "methods": "static final BaseAPI _api = Injector().get<BaseAPI>()!;\n\n  /// Retrieve details of app markup according to criteria specified.\n  ///\n  /// For parameters information refer to [AppMarkupDetailsRequest].\n  /// Throws an [AppException] if API response contains an error\n  static Future<AppMarkupDetailsResponse> fetchApplicationMarkupDetails(\n    AppMarkupDetailsRequest request,\n  ) async {\n    final AppMarkupDetailsReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          AppException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AppMarkupDetailsResponse.fromJson(response.appMarkupDetails);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_markup_details_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_markup_details_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
