{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>();\n\n  /// Retrieve details of app markup according to criteria specified.\n  ///\n  /// For parameters information refer to [AppMarkupDetailsRequest].\n  /// Throws an [AppException] if API response contains an error\n  static Future<AppMarkupDetailsResponse> fetchApplicationMarkupDetails(\n    AppMarkupDetailsSend request,\n  ) async {\n    final AppMarkupDetailsReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel baseExceptionModel}) =>\n          AppException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AppMarkupDetailsResponse.fromJson(response.appMarkupDetails);\n  }",
    "imports" : "import 'package:meta/meta.dart';\n\nimport '../../api/exceptions/exceptions.dart';\nimport '../../api/models/base_exception_model.dart';\nimport '../../basic_api/generated/app_markup_details_receive.dart';\nimport '../../basic_api/generated/app_markup_details_send.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../../helpers/helpers.dart';"
}