{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Creates a P2P (peer to peer) chat for the specified order.\n  ///\n  /// For parameters information refer to [P2pChatCreateRequest].\n  /// Throws a [P2PException] if API response contains an error\n  static Future<P2pChatCreateResponse> createChat(\n    P2pChatCreateSend request,\n  ) async {\n    final P2pChatCreateReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PChatException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return P2pChatCreateResponse.fromJson(response.p2pChatCreate);\n  }\n",
    "imports" : "import '../../basic_api/generated/p2p_chat_create_receive.dart';\nimport '../../basic_api/generated/p2p_chat_create_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}