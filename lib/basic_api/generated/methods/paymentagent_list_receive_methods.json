{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Returns a list of Payment Agents for a given country for a given currency.\n  ///\n  /// For parameters information refer to [PaymentagentListRequest].\n  /// Throws a [BaseAPIException] if API response contains an error\n  static Future<PaymentagentListResponse> fetch(\n    PaymentagentListRequest request,\n  ) async {\n    final PaymentagentListReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return PaymentagentListResponse.fromJson(response.paymentagentList);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/base_exception_model.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/paymentagent_list_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/paymentagent_list_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
