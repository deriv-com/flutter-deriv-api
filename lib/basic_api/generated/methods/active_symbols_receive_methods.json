{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets the list of active symbols.\n  ///\n  /// For parameters information refer to [ActiveSymbolsRequest].\n  /// Throws an [ActiveSymbolsException] if API response contains an error\n  static Future<ActiveSymbolsResponse> fetchActiveSymbols(\n    ActiveSymbolsRequest request,\n  ) async {\n    final ActiveSymbolsReceive response = await _api.call(\n      request: request,\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          ActiveSymbolsException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return ActiveSymbolsResponse.fromJson(response.activeSymbols);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/active_symbols_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/active_symbols_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:flutter_deriv_api/services/dependency_injector/injector.dart';\n"
}
