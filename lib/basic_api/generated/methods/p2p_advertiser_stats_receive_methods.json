{
  "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Returns historical trade statistics of a P2P advertiser.\n  ///\n  /// For parameters information refer to [P2pAdvertiserStatsRequest].\n  /// Throws a [P2PAdvertiserStatsException] if API response contains an error\n  static Future<P2pAdvertiserStatsResponse> fetchAdvertiserStats(\n    P2pAdvertiserStatsRequest request,\n  ) async {\n    final P2pAdvertiserStatsReceive response =\n        await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          P2PAdvertiserStatsException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return P2pAdvertiserStatsResponse.fromJson(response.p2pAdvertiserStats);\n  }",
  "imports": "import '../../basic_api/generated/p2p_advertiser_stats_receive.dart';\nimport '../../basic_api/generated/p2p_advertiser_stats_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}
