{
  "methods": " static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// Deletes the application by appId specified in [AppDeleteRequest.appDelete].\n  ///\n  /// For parameters information refer to [AppDeleteRequest].\n  /// Throws an [BaseAPIException] if API response contains an error\n  static Future<AppDeleteResponse> deleteApplication(\n      AppDeleteRequest request) async {\n    final AppDeleteReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AppDeleteResponse.fromJson(response.appDelete);\n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_delete_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_delete_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
