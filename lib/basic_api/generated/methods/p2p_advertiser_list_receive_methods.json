{
  "methods": "static final BaseAPI _api = Injector().get<BaseAPI>()!; \n \n  /// Returns P2P advertiser list. \n  /// \n  /// For parameters information refer to [P2pAdvertiserListRequest]. \n  static Future<P2pAdvertiserListReceive> fetchAdvertiserListRaw( \n    P2pAdvertiserListRequest request, \n  ) async { \n    final P2pAdvertiserListReceive response = await _api.call(request: request); \n \n    checkException( \n      response: response, \n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) => \n          P2PAdvertiserException(baseExceptionModel: baseExceptionModel), \n    ); \n \n    return response; \n  } \n \n  /// Returns P2P advertiser list. \n  /// \n  /// For parameters information refer to [P2pAdvertiserListRequest]. \n  static Future<P2pAdvertiserListResponse> fetchAdvertiserList( \n    P2pAdvertiserListRequest request, \n  ) async { \n    final P2pAdvertiserListReceive response = \n        await fetchAdvertiserListRaw(request); \n \n    return P2pAdvertiserListResponse.fromJson(response.p2pAdvertiserList); \n  }",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart'; \nimport 'package:flutter_deriv_api/basic_api/generated/api.dart'; \nimport 'package:flutter_deriv_api/helpers/helpers.dart'; \nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart'; \nimport 'package:deriv_dependency_injector/dependency_injector.dart';"
}
