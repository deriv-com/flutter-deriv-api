{
    "methods" : "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets the portfolio fo logged-in account\n  ///\n  /// Throws a [PortfolioException] if API response contains an error\n  static Future<PortfolioResponse> fetchPortfolio(PortfolioSend request) async {\n    final PortfolioReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          PortfolioException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return PortfolioResponse.fromJson(response.portfolio);\n  }",
    "imports" : "import '../../basic_api/generated/portfolio_receive.dart';\nimport '../../basic_api/generated/portfolio_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';"
}