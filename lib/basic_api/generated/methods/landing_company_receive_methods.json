{
    "methods": "static final BaseAPI _api = Injector.getInjector().get<BaseAPI>()!;\n\n  /// Gets landing companies for given [LandingCompanyRequest]\n  ///\n  /// Throws a [LandingCompanyException] if API response contains an error\n  static Future<LandingCompanyResponse> fetchLandingCompanies(\n    LandingCompanySend request,\n  ) async {\n    final LandingCompanyReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          LandingCompanyException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return LandingCompanyResponse.fromJson(response.landingCompany);\n  }\n\n  /// Gets details of a landing company specified in [LandingCompanyDetailsRequest]\n  ///\n  /// Throws a [LandingCompanyException] if API response contains an error\n  static Future<LandingCompanyDetailsResponse> fetchLandingCompanyDetails(\n    LandingCompanyDetailsSend request,\n  ) async {\n    final LandingCompanyDetailsReceive response = await _api.call(\n      request: request,\n    );\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          LandingCompanyException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return LandingCompanyDetailsResponse.fromJson(response.landingCompanyDetails);\n  }",
    "imports": "import '../../basic_api/generated/landing_company_details_receive.dart';\nimport '../../basic_api/generated/landing_company_details_send.dart';\nimport '../../basic_api/generated/landing_company_receive.dart';\nimport '../../basic_api/generated/landing_company_send.dart';\nimport '../../helpers/helpers.dart';\nimport '../../services/connection/api_manager/base_api.dart';\nimport '../../services/dependency_injector/injector.dart';\nimport '../exceptions/exceptions.dart';\nimport '../models/base_exception_model.dart';\nimport 'landing_company_details_receive_result.dart';"
}