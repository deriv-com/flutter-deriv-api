{
  "methods": "static final BaseAPI _api = Injector().get<BaseAPI>()!;\n\n  /// Gets the information of the OAuth application specified by [appId] in [request]\n  ///\n  /// For parameters information refer to [AppGetRequest].\n  /// Throws an [AppException] if API response contains an error\n  static Future<AppGetResponse> fetchApplicationDetails(\n    AppGetRequest request,\n  ) async {\n    final AppGetReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          AppException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return AppGetResponse.fromJson(response.appGet);\n  }\n\n  /// Gets all of the account's OAuth applications.\n  ///\n  /// For parameters information refer to [AppListRequest].\n  /// Throws an [AppException] if API response contains an error\n  static Future<List<AppGetResponse?>?> fetchApplicationList(\n    AppListRequest request,\n  ) async {\n    final AppListReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          AppException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return getListFromMap(\n      response.appList,\n      itemToTypeCallback: (dynamic item) => AppGetResponse.fromJson(item),\n    );\n  }\n\n  /// Retrieves details of app markup according to criteria specified.\n  Future<AppMarkupDetailsResponse> fetchApplicationMarkupDetails({\n    required DateTime dateFrom,\n    required DateTime dateTo,\n    String? clientLoginId,\n    bool? description,\n    int? limit,\n    int? offset,\n    String? sort,\n    List<String>? sortFields,\n  }) =>\n      AppMarkupDetailsResponse.fetchApplicationMarkupDetails(\n        AppMarkupDetailsRequest(\n          appId: appGet?.appId,\n          clientLoginid: clientLoginId,\n          dateFrom: dateFrom.toString(),\n          dateTo: dateTo.toString(),\n          description: description,\n          limit: limit,\n          offset: offset,\n          sort: sort,\n          sortFields: sortFields,\n        ),\n      );\n\n  /// The request for deleting an application.\n  Future<AppDeleteResponse> deleteApplication() =>\n      AppDeleteResponse.deleteApplication(\n        AppDeleteRequest(appDelete: appGet?.appId),\n      );\n\n  /// Register a new Oauth application.\n  Future<AppRegisterResponse> registerApplication(\n          {required List<TokenScope> scopes}) =>\n      AppRegisterResponse.registerApplication(\n        AppRegisterRequest(\n          appMarkupPercentage: appGet?.appMarkupPercentage,\n          appstore: appGet?.appstore,\n          github: appGet?.github,\n          googleplay: appGet?.googleplay,\n          homepage: appGet?.homepage,\n          name: appGet?.name,\n          redirectUri: appGet?.redirectUri,\n          scopes: scopes\n              .map((TokenScope scope) => getStringFromEnum(scope))\n              .toList(),\n          verificationUri: appGet?.verificationUri,\n        ),\n      );\n\n  /// Update application.\n  Future<AppUpdateResponse> updateApplication(\n          {required List<TokenScope> scopes}) =>\n      AppUpdateResponse.updateApplication(\n        AppUpdateRequest(\n          appMarkupPercentage: appGet?.appMarkupPercentage,\n          appUpdate: appGet?.appId,\n          appstore: appGet?.appstore,\n          github: appGet?.github,\n          googleplay: appGet?.googleplay,\n          homepage: appGet?.homepage,\n          name: appGet?.name,\n          redirectUri: appGet?.redirectUri,\n          scopes: scopes\n              .map((TokenScope scope) => getStringFromEnum(scope))\n              .toList(),\n          verificationUri: appGet?.verificationUri,\n        ),\n      );\n\n  /// Revoke access of particular app.\n  Future<RevokeOauthAppResponse> revokeOauthApplication() =>\n      RevokeOauthAppResponse.revokeOauthApplication(\n        RevokeOauthAppRequest(revokeOauthApp: appGet?.appId),\n      );",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/api/models/enums.dart';\nimport 'package:flutter_deriv_api/api/response/app_delete_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/app_markup_details_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/app_register_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/app_update_response_result.dart';\nimport 'package:flutter_deriv_api/api/response/revoke_oauth_app_response_result.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_delete_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_get_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_get_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_list_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_list_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_markup_details_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_register_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/app_update_send.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/revoke_oauth_app_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
