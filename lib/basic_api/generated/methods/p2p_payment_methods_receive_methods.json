{
  "methods": "static final BaseAPI _api = Injector()<BaseAPI>();\n\n  /// List all P2P payment methods.\n  static Future<P2pPaymentMethodsResponse> fetch(\n    P2pPaymentMethodsRequest request,\n  ) async {\n    final P2pPaymentMethodsReceive response = await fetchRaw(request);\n\n    return P2pPaymentMethodsResponse.fromJson(response.p2pPaymentMethods);\n  }\n\n  /// Dispute a P2P order.\n  static Future<P2pPaymentMethodsReceive> fetchRaw(\n    P2pPaymentMethodsRequest request,\n  ) async {\n    final P2pPaymentMethodsReceive response = await _api.call(request: request);\n\n    checkException(\n      response: response,\n      exceptionCreator: ({BaseExceptionModel? baseExceptionModel}) =>\n          BaseAPIException(baseExceptionModel: baseExceptionModel),\n    );\n\n    return response;\n  }\n",
  "imports": "import 'package:flutter_deriv_api/api/exceptions/exceptions.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_payment_methods_receive.dart';\nimport 'package:flutter_deriv_api/basic_api/generated/p2p_payment_methods_send.dart';\nimport 'package:flutter_deriv_api/helpers/helpers.dart';\nimport 'package:flutter_deriv_api/services/connection/api_manager/base_api.dart';\nimport 'package:deriv_dependency_injector/dependency_injector.dart';\n"
}
